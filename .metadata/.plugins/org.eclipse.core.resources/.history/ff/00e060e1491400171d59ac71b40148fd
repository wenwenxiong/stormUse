package kafkaUse.kafkaUse.withStorm;

import java.util.HashMap;
import java.util.Map;

import org.apache.storm.task.OutputCollector;
import org.apache.storm.task.TopologyContext;
import org.apache.storm.topology.IRichBolt;
import org.apache.storm.topology.OutputFieldsDeclarer;
import org.apache.storm.tuple.Tuple;

public class CountBolt implements IRichBolt
{
	Map<String, Integer> counters;
	private OutputCollector collector;
	
	@Override
	public void cleanup() {
		
	}
	@Override
	public void execute(Tuple arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void prepare(Map arg0, TopologyContext arg1, OutputCollector collector) 
	{
		this.counters = new HashMap<String, Integer>();
	    this.collector = collector;
		
	}
	@Override
	public void declareOutputFields(OutputFieldsDeclarer arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public Map<String, Object> getComponentConfiguration() {
		// TODO Auto-generated method stub
		return null;
	}
	
	
	
}
